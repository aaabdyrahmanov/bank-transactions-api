version: "3.2"

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    environment:
      - PORT=${API_GATEWAY_PORT}
    depends_on:
      - bank-service
      - tpp-service
    networks:
      - server-network
    command: "yarn run start"

  bank-service:
    build:
      context: ./services/local-bank
      dockerfile: Dockerfile
    container_name: bank-service
    restart: always
    ports:
      - ${LOCAL_BANK_SERVICE_PORT}:${LOCAL_BANK_SERVICE_PORT}
    environment:
      - PORT=${LOCAL_BANK_SERVICE_PORT}
      - AMQP_URL=${AMQP_URL}
      - AMQP_EXCHANGE_NAME=${AMQP_EXCHANGE_NAME}
      - AMQP_QUEUE_NAME=${AMQP_QUEUE_NAME}
      - AMQP_ROUTING_KEY=${AMQP_ROUTING_KEY}
      - CACHE_URL=${CACHE_URL}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_ID=${EMAIL_ID}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_TO=${EMAIL_TO}
      - LOCAL_BANK_SERVICE_DB_URL=${LOCAL_BANK_SERVICE_DB_URL}
      - TPP_TRANSACTION_SERVICE_URL=${TPP_TRANSACTION_SERVICE_URL}
    depends_on:
      - cache
      - db
      - rabbitmq
      - tpp-service
    networks:
      - server-network
    command: "yarn run start"

  notification:
    build:
      context: notification
      dockerfile: Dockerfile
    container_name: notification
    restart: always
    ports:
      - ${TPP_NOTIFICATION_PORT}:${TPP_NOTIFICATION_PORT}
    environment:
      - PORT=${TPP_NOTIFICATION_PORT}
      - AMQP_URL=${AMQP_URL}
      - AMQP_QUEUE_NAME=${AMQP_QUEUE_NAME}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_ID=${EMAIL_ID}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_TO=${EMAIL_TO}
      - LOCAL_BANK_SERVICE_URL=${LOCAL_BANK_SERVICE_URL}
    depends_on:
      - bank-service
      - rabbitmq
      - tpp-service
    networks:
      - server-network
    command: "yarn run start"

  tpp-service:
    build:
      context: ./services/tpp-transaction
      dockerfile: Dockerfile
    container_name: tpp-service
    restart: always
    ports:
      - ${TPP_TRANSACTION_SERVICE_PORT}:${TPP_TRANSACTION_SERVICE_PORT}
    environment:
      - PORT=${TPP_TRANSACTION_SERVICE_PORT}
      - TPP_TRANSACTION_SERVICE_DB_URL=${TPP_TRANSACTION_SERVICE_DB_URL}
    networks:
      - server-network
    command: "yarn run start"

  db:
    image: mongo:4-bionic
    container_name: db
    volumes:
      - ~/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ~/mongo-volume:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: bank-transactions-db
      MONGODB_DATA_DIR: /data/db
    ports:
      - "27017:27017"
    networks:
      - server-network

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - server-network

  cache:
    image: redis:4
    container_name: cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - server-network

networks:
  server-network:
    driver: bridge
